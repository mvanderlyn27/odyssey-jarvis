name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main # Trigger for production deployments
  workflow_dispatch: # Allows manual triggering

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }} # e.g., us-central1
  GCP_ARTIFACT_REGISTRY_REPO_NAME: ${{ secrets.GCP_ARTIFACT_REGISTRY_REPO_NAME }} # e.g., odyssey-backend-images
  IMAGE_NAME_BASE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_REPO_NAME }}/tiktok-proxy

jobs:
  build_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write" # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        run: docker build -t "${{ env.IMAGE_NAME_BASE }}:${{ github.sha }}" .

      - name: Push Docker image to Artifact Registry
        run: docker push "${{ env.IMAGE_NAME_BASE }}:${{ github.sha }}"

  deploy_production:
    name: Deploy to Production Cloud Run
    needs: build_and_push_image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Production Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE_PROD }} \
            --image "${{ env.IMAGE_NAME_BASE }}:${{ github.sha }}" \
            --region "${{ env.GCP_REGION }}" \
            --platform managed \
            --project "${{ env.GCP_PROJECT_ID }}" \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production,SUPABASE_URL=${{ secrets.SUPABASE_URL }},SUPABASE_BUCKET_NAME=${{ secrets.SUPABASE_BUCKET_NAME }}" \
            --quiet
